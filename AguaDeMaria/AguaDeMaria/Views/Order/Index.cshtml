@{
    ViewBag.Title = "Orders";
}
@Html.Partial("_DateFilter")
<table id="orderList"></table>
<div id="orderListPager"></div>
<div id="newPopupDialog" style="display: none">This is where the new Orders Dialog goes</div>
<script>
    var ordersGrid = function (dateFilter) {
        function showOrdersGrid(startDate, endDate) {
            var url = "/Order/GetOrderList?startDate=" + startDate + "&endDate=" + endDate;
            jQuery("#orderList").jqGrid({
                url: url,
                datatype: "json",
                colNames: ['Order Id', 'Customer', 'Order Number', 'Order Date', 'Slim', 'Round', 'Slim', 'Round', 'Slim', 'Round', 'Status', 'Actions'],
                colModel: [
                        { name: 'OrderId', key: true, index: 'OrderId', width: 75, hidden: true, sorttype: 'int' },
                        { name: 'CustomerName', index: 'CustomerName', width: 100 },
                        { name: 'OrderNumber', index: 'OrderNumber', width: 40 },
                        { name: 'OrderDate', index: 'OrderDate', width: 40, formatter: 'date', formatoptions: { srcformat: 'm/d/Y H:i', newformat: 'm/d/Y H:i' } },
                        { name: 'SlimQty', index: 'SlimQty', width: 30, align: "right" },
                        { name: 'RoundQty', index: 'RoundQty', width: 30, align: "right" },
                        { name: 'SlimQtyDelivered', index: 'SlimQtyDelivered', width: 30, align: "right" },
                        { name: 'RoundQtyDelivered', index: 'RoundQtyDelivered', width: 30, align: "right" },
                        { name: 'SlimQtyBalance', index: 'SlimQtyBalance', width: 30, align: "right" },
                        { name: 'RoundQtyBalance', index: 'RoundQtyBalance', width: 30, align: "right" },
                        { name: 'OrderStatusName', index: 'OrderStatusName', width: 50 },
                        { name: 'editAction', index: 'editAction', width: 40, sortable: false }],
                sortname: 'OrderId',
                viewrecords: true,
                ignoreCase: true,
                pager: '#orderListPager',
                sortorder: "asc",
                caption: "Order List",
                width: 1200,
                height: "100%",
                loadonce: true,
                footerrow: true,
                gridComplete: function () {
                    //setup the custom
                    var grid = $("#orderList");
                    var ids = grid.jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        var editAction = "<a class='fa fa-edit' href='#' title='Edit'  onclick='ordersGrid.orderEdit(" + rowId + ")'></a>";
                        var orderAction = "<a class='fa fa-car' href='#' title='Create Delivery Receipt' onclick='ordersGrid.newDelivery(" + rowId + ")'></a>";
                        grid.jqGrid('setRowData', rowId, { editAction: editAction + orderAction });
                    }
                    //set the footer
                    grid.jqGrid('footerData', 'set', {
                        'CustomerName': 'Grand Total',
                        'SlimQty': grid.jqGrid('getCol', 'SlimQty', false, 'sum'),
                        'RoundQty': grid.jqGrid('getCol', 'RoundQty', false, 'sum'),
                        'SlimQtyDelivered': grid.jqGrid('getCol', 'SlimQtyDelivered', false, 'sum'),
                        'RoundQtyDelivered': grid.jqGrid('getCol', 'RoundQtyDelivered', false, 'sum'),
                        'SlimQtyBalance': grid.jqGrid('getCol', 'SlimQtyBalance', false, 'sum'),
                        'RoundQtyBalance': grid.jqGrid('getCol', 'RoundQtyBalance', false, 'sum'),
                    });
                },
                loadComplete: function () {
                    //update the rowcolors
                    updateOrderGrid();
                }
            });
            //show the Navigator
            jQuery("#orderList")
                .jqGrid('navGrid', '#orderListPager', { edit: false, add: false, del: false })
                .navButtonAdd('#orderListPager', {
                    caption: "",
                    buttonicon: "ui-icon-plus",
                    onClickButton: function () {
                        newOrder(null);
                    },
                    position: "last",
                    title: "New Order",
                    cursor: "pointer"
                });
            //show multiple headers
            jQuery("#orderList").jqGrid('setGroupHeaders', {
                useColSpanStyle: false,
                groupHeaders: [
                  { startColumnName: 'SlimQty', numberOfColumns: 2, titleText: 'Order Quantity' },
                  { startColumnName: 'SlimQtyDelivered', numberOfColumns: 2, titleText: 'Delivered Quantity' },
                  { startColumnName: 'SlimQtyBalance', numberOfColumns: 2, titleText: 'Pending Quantity' }
                ]
            });
        }

        function updateOrderGrid() {
            $("tr.jqgrow:has(td[title='Pending'])").addClass("orderPendingColor");
            $("tr.jqgrow:has(td[title='Cancelled'])").addClass("orderCancelledColor");
            $("tr.jqgrow:has(td[title='Delivered'])").addClass("orderDeliveredColor");
            $("tr.jqgrow:has(td[title='Partially Delivered'])").addClass("orderPartialPendingColor");
        }

        function orderEdit(orderId) {
            var url = "/Order/OrderEditor";
            $.ajax({
                url: url,
                data: { OrderId: orderId },
            }).success(function (data) {
                $("#newPopupDialog").html(data);
                showOrderDialog("Edit Order");
            });
        }

        function newOrder() {
            var url = "/Order/OrderEditor";
            $.ajax({
                url: url,
                data: {},
            }).success(function (data) {
                $("#newPopupDialog").html(data);
                showOrderDialog("New Order");
            });
        }

        function newDelivery(orderId) {
            var url = "/Delivery/DeliveryEditor";
            $.ajax({
                url: url,
                data: { orderId: orderId },
            }).success(function (data) {
                $("#newPopupDialog").html(data);
                showDrDialog("Delivery Receipt");
            });
        }

        function showDrDialog(title) {
            $("#newPopupDialog").dialog({
                modal: true,
                title: title,
                buttons: [{
                    text: "Create",
                    click: function () {
                        //submit the form
                        $.ajax({
                            type: "POST",
                            url: "/Delivery/SaveDeliveryReceipt",
                            data: $("#drEntryForm").serialize(),
                            context: $(this)
                        }).success(function (data) {
                            if (typeof (data.OrderId) == 'undefined') {
                                //replace the contents of the dialog
                                $("#newPopupDialog").html(data);
                            } else {
                                $(this).dialog("close");
                                //this must have been successful
                                window.location.href = "/Delivery/Index";
                            }
                        });
                    }
                }]
            }).dialog("open");
        }

        function showOrderDialog(title) {
            $("#newPopupDialog").dialog({
                modal: true,
                title: title,
                buttons: [{
                    text: "Save",
                    click: function () {
                        //submit the form
                        $.ajax({
                            type: "POST",
                            url: "/Order/SaveOrder",
                            data: $("#orderEntryForm").serialize(),
                            context: $(this)
                        }).success(function (data) {
                            if (typeof (data.OrderId) == 'undefined') {
                                //replace the contents of the dialog
                                $("#newPopupDialog").html(data);
                            } else {
                                var row = $("#orderList").jqGrid('getRowData', data.OrderId);
                                if (typeof (row.OrderId) == 'undefined') {
                                    $("#orderList").jqGrid('addRowData', data.OrderId, data, "first");
                                } else {
                                    $("#orderList").jqGrid('setRowData', data.OrderId, data);
                                    $("#orderList").jqGrid().trigger("reloadGrid");
                                }
                                updateOrderGrid();
                                //this must have been successful
                                $(this).dialog("close");
                            }
                        });
                    }
                }]
            }).dialog("open");
        }

        $(document).ready(function () {

            $("#newPopupDialog").dialog({
                width: 500,
                height: 450,
                autoOpen: false
            });

            var startDate = dateFilter.getStartDate();
            var endDate = dateFilter.getEndDate();

            //show the grid
            dateFilter.setClickDelegate(showOrderGrid);
            ordersGrid.showOrdersGrid(startDate, endDate);

        });

        function showOrderGrid() {
            var startDate = dateFilter.getStartDate();
            var endDate = dateFilter.getEndDate();
            var url = "/Order/GetOrderList?startDate=" + startDate + "&endDate=" + endDate;

            jQuery("#orderList").jqGrid().setGridParam({
                datatype: 'json',
                page: 1,
                url: url
            }).trigger("reloadGrid");
        }

        return ({
            showOrdersGrid: showOrdersGrid,
            orderEdit: orderEdit,
            newDelivery: newDelivery,
            newOrder: newOrder
        });
    }(DateFilter);


</script>